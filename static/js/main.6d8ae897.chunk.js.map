{"version":3,"sources":["types/SelectValues.ts","components/TodoList/TodoList.tsx","components/TodoFilter/TodoFilter.tsx","components/Loader/Loader.tsx","components/TodoModal/TodoModal.tsx","api.ts","App.tsx","index.tsx"],"names":["SelectValue","TodoList","todos","handleModal","selectedUserId","className","map","todo","id","completed","classNames","title","name","onClick","type","userId","TodoFilter","selectedValue","searchQuery","onChangeSelect","onChangeQuery","clearSearch","onChange","value","Object","entries","key","placeholder","style","pointerEvents","Loader","TodoModal","user","todoSelected","resetModal","email","href","get","url","delay","fullURL","Promise","resolve","setTimeout","then","fetch","res","json","App","useState","setTodos","setSearchQuery","All","setSelectedValue","modal","setModal","checkedUserId","setCheckedUserId","setUser","setTodoSelected","visibleTodos","todosFromServer","query","queryLower","toLowerCase","trim","filter","includes","todosFilter","Completed","Active","filterSelectedTodos","useEffect","useMemo","e","target","length","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.6d8ae897.chunk.js","sourcesContent":["export enum SelectValue {\n  All = 'all',\n  Active = 'active',\n  Completed = 'completed',\n}\n","import React from 'react';\nimport classNames from 'classnames/bind';\nimport { Todo } from '../../types/Todo';\n\ntype Props = {\n  todos: Todo[],\n  handleModal: (todo: Todo) => () => void,\n  selectedUserId: number\n};\n\nexport const TodoList: React.FC<Props> = (\n  {\n    todos,\n    handleModal,\n    selectedUserId,\n  },\n) => (\n  <table className=\"table is-narrow is-fullwidth\">\n    <thead>\n      <tr>\n        <th>#</th>\n        <th>\n          <span className=\"icon\">\n            <i className=\"fas fa-check\" />\n          </span>\n        </th>\n        <th>Title</th>\n        <th> </th>\n      </tr>\n    </thead>\n\n    <tbody>\n      {todos.map(todo => (\n        // <tr key={todo.id} data-cy=\"todo\" className=\"has-background-info-light\">\n        <tr key={todo.id} data-cy=\"todo\" className=\"\">\n          <td className=\"is-vcentered\">{todo.id}</td>\n          {todo.completed ? (\n            <td className=\"is-vcentered\">\n              <span className=\"icon\" data-cy=\"iconCompleted\">\n                <i className=\"fas fa-check\" />\n              </span>\n            </td>\n          ) : (\n            <td className=\"is-vcentered\" />\n          )}\n          {/* <td className=\"is-vcentered\" /> */}\n          <td className=\"is-vcentered is-expanded\">\n            <p className={classNames({\n              'has-text-success': todo.completed,\n              'has-text-danger': !todo.completed,\n            })}\n            >\n              {todo.title}\n            </p>\n          </td>\n          <td className=\"has-text-right is-vcentered\">\n            <button\n              data-cy=\"selectButton\"\n              className=\"button\"\n              name=\"selectButton\"\n              onClick={handleModal(todo)}\n              type=\"button\"\n            >\n              <span className=\"icon\">\n                <i className={classNames('far', {\n                  'fa-eye-slash': selectedUserId === todo.userId,\n                  'fa-eye': selectedUserId !== todo.userId,\n                })}\n                />\n              </span>\n            </button>\n          </td>\n        </tr>\n      ))}\n    </tbody>\n  </table>\n);\n","import React, { ChangeEvent } from 'react';\nimport { SelectValue } from '../../types/SelectValues';\n\ntype Props = {\n  selectedValue: SelectValue,\n  searchQuery: string,\n  onChangeSelect: (event: ChangeEvent<HTMLSelectElement>) => void,\n  onChangeQuery: (event: ChangeEvent<HTMLInputElement>) => void,\n  clearSearch: () => void,\n};\n\nexport const TodoFilter: React.FC<Props> = (\n  {\n    selectedValue,\n    searchQuery,\n    onChangeSelect,\n    onChangeQuery,\n    clearSearch,\n  },\n) => (\n  <form className=\"field has-addons\">\n    <p className=\"control\">\n      <span className=\"select\">\n        <select\n          data-cy=\"statusSelect\"\n          onChange={onChangeSelect}\n          value={selectedValue}\n        >\n          {Object.entries(SelectValue).map(([key, value]) => (\n            <option\n              key={value}\n              value={value}\n            >\n              {key}\n            </option>\n          ))}\n        </select>\n      </span>\n    </p>\n\n    <p className=\"control is-expanded has-icons-left has-icons-right\">\n      <input\n        data-cy=\"searchInput\"\n        type=\"text\"\n        name=\"search\"\n        className=\"input\"\n        placeholder=\"Search...\"\n        value={searchQuery}\n        onChange={onChangeQuery}\n      />\n      <span className=\"icon is-left\">\n        <i className=\"fas fa-magnifying-glass\" />\n      </span>\n\n      <span className=\"icon is-right\" style={{ pointerEvents: 'all' }}>\n        {searchQuery && (\n          // eslint-disable-next-line jsx-a11y/control-has-associated-label\n          <button\n            data-cy=\"clearSearchButton\"\n            name=\"clearButton\"\n            type=\"button\"\n            className=\"delete\"\n            onClick={clearSearch}\n          />\n        )}\n      </span>\n    </p>\n  </form>\n);\n","import React from 'react';\nimport './Loader.scss';\n\nexport const Loader: React.FC = () => (\n  <div className=\"Loader\" data-cy=\"loader\">\n    <div className=\"Loader__content\" />\n  </div>\n);\n","import React from 'react';\nimport classNames from 'classnames/bind';\nimport { Loader } from '../Loader';\nimport { Todo } from '../../types/Todo';\nimport { User } from '../../types/User';\n\ntype Props = {\n  user: User\n  todoSelected: Todo\n  resetModal: () => void\n};\n\nexport const TodoModal: React.FC<Props> = (\n  {\n    user,\n    todoSelected,\n    resetModal,\n  },\n) => {\n  const { name, email } = user;\n\n  return (\n    <div className=\"modal is-active\" data-cy=\"modal\">\n      <div className=\"modal-background\" />\n\n      {!user ? (\n        <Loader />\n      ) : (\n        <div className=\"modal-card\">\n          <header className=\"modal-card-head\">\n            <div\n              className=\"modal-card-title has-text-weight-medium\"\n              data-cy=\"modal-header\"\n            >\n              {`Todo #${todoSelected.id}`}\n            </div>\n\n            {/* eslint-disable-next-line jsx-a11y/control-has-associated-label */}\n            <button\n              type=\"button\"\n              className=\"delete\"\n              data-cy=\"modal-close\"\n              onClick={resetModal}\n            />\n          </header>\n\n          <div className=\"modal-card-body\">\n            <p className=\"block\" data-cy=\"modal-title\">\n              {todoSelected.title}\n            </p>\n\n            <p className=\"block\" data-cy=\"modal-user\">\n              {/* <strong className=\"has-text-success\">Done</strong> */}\n              {todoSelected.completed ? (\n                <strong className={classNames({\n                  'has-text-success': todoSelected.completed,\n                })}\n                >\n                  Done\n                </strong>\n              ) : (\n                <strong className={classNames({\n                  'has-text-danger': !todoSelected.completed,\n                })}\n                >\n                  Planned\n                </strong>\n              )}\n              {' by '}\n\n              <a href={`mailto:${email}`}>\n                {name}\n              </a>\n            </p>\n          </div>\n        </div>\n      )}\n    </div>\n  );\n};\n","import { Todo } from './types/Todo';\nimport { User } from './types/User';\n\n// eslint-disable-next-line max-len\nconst BASE_URL = 'https://mate-academy.github.io/react_dynamic-list-of-todos/api';\n\n// that is resolved after a given delay\nfunction wait(delay: number): Promise<void> {\n  return new Promise(resolve => {\n    setTimeout(resolve, delay);\n  });\n}\n\nfunction get<T>(url: string): Promise<T> {\n  // eslint-disable-next-line prefer-template\n  const fullURL = BASE_URL + url + '.json';\n\n  // we add some delay to see now the laoder works\n  return wait(300)\n    .then(() => fetch(fullURL))\n    .then(res => res.json());\n}\n\nexport const getTodos = () => get<Todo[]>('/todos');\n\nexport const getUser = (userId: number) => get<User>(`/users/${userId}`);\n","/* eslint-disable max-len */\nimport React, {\n  ChangeEvent, useEffect, useMemo, useState,\n} from 'react';\nimport 'bulma/css/bulma.css';\nimport '@fortawesome/fontawesome-free/css/all.css';\n\nimport { TodoList } from './components/TodoList';\nimport { TodoFilter } from './components/TodoFilter';\nimport { TodoModal } from './components/TodoModal';\nimport { Loader } from './components/Loader';\nimport { Todo } from './types/Todo';\nimport { getTodos, getUser } from './api';\nimport { SelectValue } from './types/SelectValues';\nimport { User } from './types/User';\n\nexport const App: React.FC = () => {\n  const [todos, setTodos] = useState<Todo[]>([]);\n  const [searchQuery, setSearchQuery] = useState<string>('');\n  const [selectedValue, setSelectedValue] = useState(SelectValue.All);\n  const [modal, setModal] = useState<boolean>(false);\n  const [checkedUserId, setCheckedUserId] = useState<number>(0);\n  const [user, setUser] = useState<User | undefined>();\n  const [todoSelected, setTodoSelected] = useState<Todo>();\n\n  const filterSelectedTodos = () => {\n    switch (selectedValue) {\n      case SelectValue.All:\n        return todos;\n      case SelectValue.Completed:\n        return todos.filter((todo) => todo.completed);\n      case SelectValue.Active:\n        return todos.filter((todo) => !todo.completed);\n      default:\n        return [];\n    }\n  };\n\n  const todosFilter = (todosFromServer: Todo[], query: string) => {\n    const queryLower = query.toLowerCase().trim();\n\n    return todosFromServer.filter((todo:Todo) => todo.title.includes(queryLower));\n  };\n\n  const visibleTodos = todosFilter(filterSelectedTodos(), searchQuery);\n\n  useEffect(() => {\n    getTodos().then(setTodos);\n  }, []);\n\n  useMemo(() => {\n    getUser(checkedUserId).then(setUser);\n  }, [checkedUserId]);\n\n  const handleSelectChange = (e: ChangeEvent<HTMLSelectElement>) => {\n    setSelectedValue(e.target.value as SelectValue);\n  };\n\n  const handleSearchQuery = (e: ChangeEvent<HTMLInputElement>) => {\n    setSearchQuery(e.target.value);\n  };\n\n  const handleClearSearch = () => {\n    setSearchQuery('');\n  };\n\n  const resetModal = () => {\n    setModal(false);\n  };\n\n  const handleModal = (todo: Todo) => () => {\n    setModal(true);\n    setCheckedUserId(todo.userId);\n    setTodoSelected(todo);\n  };\n\n  return (\n    <>\n      <div className=\"section\">\n        <div className=\"container\">\n          <div className=\"box\">\n            <h1 className=\"title\">Todos:</h1>\n\n            <div className=\"block\">\n              <TodoFilter\n                selectedValue={selectedValue}\n                searchQuery={searchQuery}\n                onChangeQuery={handleSearchQuery}\n                onChangeSelect={handleSelectChange}\n                clearSearch={handleClearSearch}\n              />\n            </div>\n\n            <div className=\"block\">\n              {!todos.length && (\n                <Loader />\n              )}\n              <TodoList\n                todos={visibleTodos}\n                handleModal={handleModal}\n                selectedUserId={checkedUserId}\n              />\n            </div>\n          </div>\n        </div>\n      </div>\n\n      {modal && todoSelected && user && (\n        <TodoModal user={user} todoSelected={todoSelected} resetModal={resetModal} />\n      )}\n    </>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}